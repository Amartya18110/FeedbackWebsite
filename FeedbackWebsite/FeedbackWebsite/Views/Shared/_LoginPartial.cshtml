@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link active"
 
               title="Manage">Hello 
                @Html.DisplayFor(_ => User.Identity.Name)!</a>
        </li>
        <li class="nav-item">
            @*<form class="form-inline" asp-page="/Account/LogOff"*@
            <form class="form-inline" asp-controller="Account" asp-action="LogOff"
                  asp-route-returnUrl="@Url.Page("/", new { area = "" })"
                  method="post">
                <button type="submit" class="nav-link btn btn-link active">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            @*<a class="nav-link text-dark" asp-page="/Account/Register">Register</a>*@
            <a class="nav-link active" asp-controller="Account" asp-action="Register">Register</a>
        </li>
        <li class="nav-item">
            @*<a class="nav-link text-dark" asp-page="/Account/Login">Login</a>*@
            <a class="nav-link active" asp-controller="Account" asp-action="Login">Login</a>
        </li>
    }
</ul>